const SystemSettings = () => {
    const [settings, setSettings] = useState({
        siteName: 'Telemedicine System',
        allowRegistration: true,
        requireEmailVerification: false,
        maxAppointmentsPerDay: 10,
        appointmentDuration: 30,
        notifications: {
            emailNotifications: true,
            smsNotifications: false,
            pushNotifications: true
        },
        maintenance: {
            enabled: false,
            message: 'H·ªá th·ªëng ƒëang b·∫£o tr√¨'
        }
    });

    const [loading, setLoading] = useState(false);
    const [saved, setSaved] = useState(false);

    const handleSaveSettings = async () => {
        setLoading(true);
        try {
            // await api.post('/admin/settings', settings);
            setSaved(true);
            setTimeout(() => setSaved(false), 3000);
            alert('C√†i ƒë·∫∑t ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng');
        } catch (error) {
            alert('L·ªói khi l∆∞u c√†i ƒë·∫∑t');
        } finally {
            setLoading(false);
        }
    };

    const handleSettingChange = (path, value) => {
        const keys = path.split('.');
        setSettings(prev => {
            const newSettings = { ...prev };
            let current = newSettings;

            for (let i = 0; i < keys.length - 1; i++) {
                current[keys[i]] = { ...current[keys[i]] };
                current = current[keys[i]];
            }

            current[keys[keys.length - 1]] = value;
            return newSettings;
        });
    };

    return (
        <div className="space-y-6 fade-in">
            <div className="flex justify-between items-center">
                <h2 className="text-2xl font-bold">C·∫•u h√¨nh h·ªá th·ªëng</h2>
                {saved && (
                    <div className="bg-green-100 text-green-800 px-4 py-2 rounded-lg">
                        ‚úÖ ƒê√£ l∆∞u th√†nh c√¥ng
                    </div>
                )}
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {/* General Settings */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                    <h3 className="text-lg font-semibold mb-4 flex items-center">
                        ‚öôÔ∏è C√†i ƒë·∫∑t chung
                    </h3>
                    <div className="space-y-4">
                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                T√™n h·ªá th·ªëng
                            </label>
                            <input
                                type="text"
                                value={settings.siteName}
                                onChange={(e) => handleSettingChange('siteName', e.target.value)}
                                className="w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                            />
                        </div>

                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="allowRegistration"
                                checked={settings.allowRegistration}
                                onChange={(e) => handleSettingChange('allowRegistration', e.target.checked)}
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="allowRegistration" className="text-sm font-medium text-gray-700">
                                Cho ph√©p ƒëƒÉng k√Ω t√†i kho·∫£n m·ªõi
                            </label>
                        </div>

                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="requireEmailVerification"
                                checked={settings.requireEmailVerification}
                                onChange={(e) => handleSettingChange('requireEmailVerification', e.target.checked)}
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="requireEmailVerification" className="text-sm font-medium text-gray-700">
                                Y√™u c·∫ßu x√°c th·ª±c email
                            </label>
                        </div>

                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                S·ªë cu·ªôc h·∫πn t·ªëi ƒëa m·ªói ng√†y
                            </label>
                            <input
                                type="number"
                                value={settings.maxAppointmentsPerDay}
                                onChange={(e) => handleSettingChange('maxAppointmentsPerDay', parseInt(e.target.value))}
                                className="w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                                min="1"
                            />
                        </div>

                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                Th·ªùi gian m·ªói cu·ªôc h·∫πn (ph√∫t)
                            </label>
                            <select
                                value={settings.appointmentDuration}
                                onChange={(e) => handleSettingChange('appointmentDuration', parseInt(e.target.value))}
                                className="w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                            >
                                <option value={15}>15 ph√∫t</option>
                                <option value={30}>30 ph√∫t</option>
                                <option value={45}>45 ph√∫t</option>
                                <option value={60}>60 ph√∫t</option>
                            </select>
                        </div>
                    </div>
                </div>

                {/* Notification Settings */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                    <h3 className="text-lg font-semibold mb-4 flex items-center">
                        üîî C√†i ƒë·∫∑t th√¥ng b√°o
                    </h3>
                    <div className="space-y-4">
                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="emailNotifications"
                                checked={settings.notifications.emailNotifications}
                                onChange={(e) => handleSettingChange('notifications.emailNotifications', e.target.checked)}
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="emailNotifications" className="text-sm font-medium text-gray-700">
                                üìß Th√¥ng b√°o qua Email
                            </label>
                        </div>

                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="smsNotifications"
                                checked={settings.notifications.smsNotifications}
                                onChange={(e) => handleSettingChange('notifications.smsNotifications', e.target.checked)}
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="smsNotifications" className="text-sm font-medium text-gray-700">
                                üì± Th√¥ng b√°o qua SMS
                            </label>
                        </div>

                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="pushNotifications"
                                checked={settings.notifications.pushNotifications}
                                onChange={(e) => handleSettingChange('notifications.pushNotifications', e.target.checked)}
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="pushNotifications" className="text-sm font-medium text-gray-700">
                                üîî Push Notifications
                            </label>
                        </div>

                        <div className="p-4 bg-blue-50 rounded-lg">
                            <p className="text-sm text-blue-800">
                                <strong>L∆∞u √Ω:</strong> Thay ƒë·ªïi c√†i ƒë·∫∑t th√¥ng b√°o s·∫Ω ·∫£nh h∆∞·ªüng ƒë·∫øn t·∫•t c·∫£ ng∆∞·ªùi d√πng trong h·ªá th·ªëng.
                            </p>
                        </div>
                    </div>
                </div>

                {/* Maintenance Mode */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                    <h3 className="text-lg font-semibold mb-4 flex items-center">
                        üîß Ch·∫ø ƒë·ªô b·∫£o tr√¨
                    </h3>
                    <div className="space-y-4">
                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="maintenanceEnabled"
                                checked={settings.maintenance.enabled}
                                onChange={(e) => handleSettingChange('maintenance.enabled', e.target.checked)}
                                className="rounded text-red-600 focus:ring-red-500"
                            />
                            <label htmlFor="maintenanceEnabled" className="text-sm font-medium text-gray-700">
                                B·∫≠t ch·∫ø ƒë·ªô b·∫£o tr√¨
                            </label>
                        </div>

                        {settings.maintenance.enabled && (
                            <div className="p-3 bg-red-50 border border-red-200 rounded-lg">
                                <p className="text-red-800 text-sm font-medium">
                                    ‚ö†Ô∏è H·ªá th·ªëng s·∫Ω chuy·ªÉn sang ch·∫ø ƒë·ªô b·∫£o tr√¨
                                </p>
                            </div>
                        )}

                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                Th√¥ng b√°o b·∫£o tr√¨
                            </label>
                            <textarea
                                value={settings.maintenance.message}
                                onChange={(e) => handleSettingChange('maintenance.message', e.target.value)}
                                className="w-full border rounded-lg px-3 py-2 h-20 focus:ring-2 focus:ring-blue-500"
                                placeholder="Th√¥ng b√°o hi·ªÉn th·ªã khi h·ªá th·ªëng b·∫£o tr√¨"
                            />
                        </div>
                    </div>
                </div>

                {/* System Actions */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                    <h3 className="text-lg font-semibold mb-4 flex items-center">
                        üõ†Ô∏è Thao t√°c h·ªá th·ªëng
                    </h3>
                    <div className="space-y-3">
                        <button
                            onClick={() => {
                                if (window.confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a cache?')) {
                                    alert('Cache ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng');
                                }
                            }}
                            className="w-full bg-yellow-600 text-white py-3 rounded-lg hover:bg-yellow-700 transition-colors flex items-center justify-center space-x-2"
                        >
                            <span>üóëÔ∏è</span>
                            <span>X√≥a Cache h·ªá th·ªëng</span>
                        </button>

                        <button
                            onClick={() => {
                                if (window.confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën backup d·ªØ li·ªáu?')) {
                                    alert('Backup ƒëang ƒë∆∞·ª£c th·ª±c hi·ªán...');
                                }
                            }}
                            className="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center space-x-2"
                        >
                            <span>üíæ</span>
                            <span>Backup d·ªØ li·ªáu</span>
                        </button>

                        <button
                            onClick={() => {
                                if (window.confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën kh·ªüi ƒë·ªông l·∫°i h·ªá th·ªëng?')) {
                                    alert('H·ªá th·ªëng s·∫Ω kh·ªüi ƒë·ªông l·∫°i trong 30 gi√¢y');
                                }
                            }}
                            className="w-full bg-red-600 text-white py-3 rounded-lg hover:bg-red-700 transition-colors flex items-center justify-center space-x-2"
                        >
                            <span>üîÑ</span>
                            <span>Kh·ªüi ƒë·ªông l·∫°i h·ªá th·ªëng</span>
                        </button>

                        <button
                            onClick={() => {
                                const configData = JSON.stringify(settings, null, 2);
                                const blob = new Blob([configData], { type: 'application/json' });
                                const url = URL.createObjectURL(blob);
                                const a = document.createElement('a');
                                a.href = url;
                                a.download = 'system-config.json';
                                a.click();
                                URL.revokeObjectURL(url);
                            }}
                            className="w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center space-x-2"
                        >
                            <span>üì§</span>
                            <span>Xu·∫•t c·∫•u h√¨nh</span>
                        </button>
                    </div>
                </div>

                {/* Security Settings */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                    <h3 className="text-lg font-semibold mb-4 flex items-center">
                        üîí C√†i ƒë·∫∑t b·∫£o m·∫≠t
                    </h3>
                    <div className="space-y-4">
                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                Th·ªùi gian timeout session (ph√∫t)
                            </label>
                            <select className="w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500">
                                <option value={30}>30 ph√∫t</option>
                                <option value={60}>1 gi·ªù</option>
                                <option value={120}>2 gi·ªù</option>
                                <option value={480}>8 gi·ªù</option>
                            </select>
                        </div>

                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="require2FA"
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="require2FA" className="text-sm font-medium text-gray-700">
                                B·∫Øt bu·ªôc x√°c th·ª±c 2 y·∫øu t·ªë (2FA)
                            </label>
                        </div>

                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="blockSuspiciousLogin"
                                defaultChecked
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="blockSuspiciousLogin" className="text-sm font-medium text-gray-700">
                                Ch·∫∑n ƒëƒÉng nh·∫≠p ƒë√°ng ng·ªù
                            </label>
                        </div>

                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                S·ªë l·∫ßn ƒëƒÉng nh·∫≠p sai t·ªëi ƒëa
                            </label>
                            <input
                                type="number"
                                defaultValue={5}
                                min="3"
                                max="10"
                                className="w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                            />
                        </div>
                    </div>
                </div>

                {/* Performance Settings */}
                <div className="bg-white rounded-xl shadow-lg p-6">
                    <h3 className="text-lg font-semibold mb-4 flex items-center">
                        ‚ö° C√†i ƒë·∫∑t hi·ªáu su·∫•t
                    </h3>
                    <div className="space-y-4">
                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="enableCaching"
                                defaultChecked
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="enableCaching" className="text-sm font-medium text-gray-700">
                                B·∫≠t cache h·ªá th·ªëng
                            </label>
                        </div>

                        <div className="flex items-center space-x-3">
                            <input
                                type="checkbox"
                                id="enableCompression"
                                defaultChecked
                                className="rounded text-blue-600 focus:ring-blue-500"
                            />
                            <label htmlFor="enableCompression" className="text-sm font-medium text-gray-700">
                                N√©n d·ªØ li·ªáu API responses
                            </label>
                        </div>

                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                Gi·ªõi h·∫°n k√≠ch th∆∞·ªõc file upload (MB)
                            </label>
                            <select className="w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500">
                                <option value={5}>5 MB</option>
                                <option value={10}>10 MB</option>
                                <option value={25}>25 MB</option>
                                <option value={50}>50 MB</option>
                            </select>
                        </div>

                        <div>
                            <label className="block text-sm font-medium text-gray-700 mb-2">
                                S·ªë record t·ªëi ƒëa m·ªói trang
                            </label>
                            <select className="w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500">
                                <option value={20}>20</option>
                                <option value={50}>50</option>
                                <option value={100}>100</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div className="flex justify-end space-x-4">
                <button
                    onClick={() => setSettings({
                        siteName: 'Telemedicine System',
                        allowRegistration: true,
                        requireEmailVerification: false,
                        maxAppointmentsPerDay: 10,
                        appointmentDuration: 30,
                        notifications: {
                            emailNotifications: true,
                            smsNotifications: false,
                            pushNotifications: true
                        },
                        maintenance: {
                            enabled: false,
                            message: 'H·ªá th·ªëng ƒëang b·∫£o tr√¨'
                        }
                    })}
                    className="bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600"
                >
                    üîÑ Kh√¥i ph·ª•c m·∫∑c ƒë·ªãnh
                </button>
                <button
                    onClick={handleSaveSettings}
                    disabled={loading}
                    className="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2"
                >
                    {loading ? (
                        <>
                            <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                            <span>ƒêang l∆∞u...</span>
                        </>
                    ) : (
                        <>
                            <span>üíæ</span>
                            <span>L∆∞u t·∫•t c·∫£ c√†i ƒë·∫∑t</span>
                        </>
                    )}
                </button>
            </div>
        </div>
    );
};